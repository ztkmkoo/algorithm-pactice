package com.ztkmkoo.hackerrank.easy;

import com.ztkmkoo.hackerrank.HackerRankPractice;
import com.ztkmkoo.practice.KebronPractice;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * https://www.hackerrank.com/challenges/migratory-birds/problem?h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen
 */
@KebronPractice(regDate = "2019-07-27 22:01")
public class MigratoryBirds extends HackerRankPractice {

    private static final String[][] inputs = {
            // n k, ar
            {"6", "1 4 4 4 5 3"},
            {"11", "1 2 3 4 5 4 3 2 1 3 4"},
            {"7721", "3 1 1 2 4 1 1 2 1 4 1 2 4 2 2 2 5 1 3 1 2 2 1 1 2 4 2 2 2 2 1 1 2 5 2 1 1 1 2 1 2 1 3 1 1 2 1 5 1 4 1 1 1 3 5 2 1 1 4 2 4 2 2 2 1 1 3 2 2 1 3 5 4 2 2 4 4 5 2 2 2 3 1 2 1 2 3 2 2 1 1 2 5 2 2 1 1 1 2 1 1 1 1 2 1 2 1 2 2 5 1 4 1 2 2 2 2 1 1 2 2 2 3 2 2 2 2 2 2 2 3 1 1 5 2 1 2 1 2 4 2 2 1 2 1 2 1 2 2 1 2 1 2 4 2 5 2 4 4 2 4 1 1 2 2 2 2 4 1 5 2 2 1 1 1 2 1 1 2 2 1 4 1 2 1 4 1 4 2 1 4 2 1 1 1 4 3 2 2 2 2 2 2 1 2 2 2 2 4 1 2 2 1 2 1 4 3 4 2 4 1 2 1 3 2 2 5 2 1 1 1 2 2 1 4 1 1 2 1 5 4 2 1 2 1 1 2 1 2 2 1 5 2 4 1 2 2 1 2 2 1 2 1 2 2 3 2 1 2 1 2 1 1 4 1 2 2 4 2 2 1 1 1 1 2 4 1 2 1 3 1 2 2 1 2 5 1 1 2 2 2 1 1 1 1 1 4 2 1 2 2 1 2 1 4 1 2 2 1 2 2 2 2 2 2 4 2 1 5 1 2 3 2 4 2 1 1 2 1 1 2 1 3 1 2 2 2 2 2 4 3 1 2 1 3 2 4 2 4 4 1 2 5 3 1 4 1 2 2 1 2 2 4 1 2 3 1 1 1 3 1 5 1 2 2 1 2 2 1 1 1 1 1 4 2 3 3 2 2 1 2 1 2 1 1 4 5 2 2 2 2 2 1 2 1 1 5 2 4 1 1 1 1 2 2 2 2 3 2 2 1 5 5 2 5 2 2 2 1 1 2 1 4 2 4 2 1 1 2 2 1 4 2 4 2 1 2 1 1 1 2 4 2 2 3 1 1 2 2 1 2 2 1 1 2 2 1 1 1 2 4 1 1 1 1 1 5 2 1 5 1 2 4 2 2 1 2 1 1 4 1 2 1 1 1 1 2 1 1 1 2 1 1 2 4 1 2 4 2 2 1 2 2 4 2 1 2 1 1 1 2 2 1 2 1 2 2 1 2 2 2 2 1 2 4 2 4 4 3 2 1 2 1 1 1 2 4 1 1 1 2 1 5 4 2 1 1 2 1 2 5 1 1 4 4 2 1 1 2 2 1 2 1 1 1 2 1 2 2 1 1 2 1 2 1 4 1 4 1 1 4 1 3 2 2 2 2 4 5 2 2 1 2 1 1 2 1 1 1 2 2 4 5 2 5 2 2 1 1 1 2 1 5 1 2 1 1 4 1 2 1 5 2 1 2 4 2 4 1 2 1 1 2 1 2 2 5 1 1 1 4 2 2 2 1 1 4 5 2 4 1 2 2 2 2 2 2 2 1 2 2 2 2 1 2 1 4 2 1 4 1 2 3 1 1 2 1 2 1 1 1 2 1 1 1 2 1 2 2 5 5 2 4 2 4 1 2 5 2 4 1 1 1 2 2 1 4 5 5 2 2 1 4 4 4 1 4 2 5 2 2 1 1 1 2 1 2 1 4 4 4 2 1 3 2 5 1 1 2 2 2 1 1 5 2 4 2 2 4 3 1 1 2 2 2 2 1 2 5 1 1 1 3 2 2 1 5 2 1 2 2 1 2 4 1 1 4 2 4 2 4 1 2 2 1 5 1 2 1 1 2 2 1 1 2 4 1 1 4 5 2 1 2 4 4 2 2 2 1 1 1 4 1 2 2 4 1 2 5 2 3 1 1 1 2 1 2 1 4 2 2 5 1 1 2 2 4 2 3 2 1 3 1 1 1 4 2 1 2 2 1 1 4 5 2 1 1 2 3 4 2 2 2 4 1 1 5 1 2 1 2 1 2 1 2 1 1 4 2 4 2 2 3 5 5 2 5 5 1 3 4 2 3 1 4 2 1 1 2 1 2 4 1 1 1 1 1 1 2 4 2 1 4 5 1 1 1 1 2 1 1 1 4 1 4 1 2 4 1 1 1 5 3 2 4 4 2 1 1 2 4 1 1 4 2 4 1 1 5 1 1 1 1 2 2 2 4 1 2 1 2 2 2 2 4 2 2 1 1 1 1 1 4 5 1 2 2 4 2 1 2 2 2 4 2 4 2 2 1 1 5 2 5 4 1 1 2 2 1 2 1 2 2 1 2 1 2 2 1 2 1 4 1 2 2 2 2 2 2 2 5 1 2 1 2 1 1 1 2 1 2 2 5 2 2 2 1 1 2 4 2 2 1 1 1 2 2 2 1 4 1 1 2 1 4 1 1 2 2 4 1 4 2 2 2 1 3 1 2 2 4 2 1 1 2 2 1 1 2 1 2 1 1 2 1 2 4 1 1 4 3 4 2 2 1 4 1 4 1 1 5 1 1 1 2 5 5 2 2 2 4 4 4 1 4 5 1 2 3 2 2 2 1 1 2 2 2 1 2 2 1 2 2 1 5 1 2 1 1 2 2 1 4 5 1 1 2 1 2 2 1 2 2 1 2 1 2 1 1 2 4 4 1 2 4 2 4 4 1 1 1 1 2 5 1 2 4 4 2 1 4 1 1 1 2 1 1 1 2 5 2 2 1 1 5 2 4 3 2 1 1 4 2 2 1 5 5 2 3 2 1 2 1 5 4 1 2 4 1 4 1 1 2 2 2 1 5 1 1 1 5 1 1 5 1 1 1 1 2 4 2 2 1 1 1 2 1 2 1 2 2 1 1 4 5 2 4 2 2 1 1 2 4 2 2 1 1 2 4 1 1 1 1 2 2 2 4 2 2 2 4 4 1 1 5 2 4 2 1 4 1 1 2 2 2 2 1 1 1 2 1 1 2 2 1 1 1 2 1 1 2 5 1 5 2 2 1 1 2 4 2 2 2 2 2 1 4 1 1 2 4 2 2 1 2 1 1 2 5 2 2 2 2 4 1 2 2 3 2 2 1 3 4 2 3 4 2 1 2 2 1 1 2 1 3 2 1 2 2 2 1 2 2 5 1 1 4 1 2 2 5 5 2 2 1 1 2 1 2 4 2 1 4 1 1 2 1 1 4 2 2 4 1 5 4 1 1 1 1 1 2 1 1 2 5 2 1 4 1 1 1 2 1 5 5 2 1 2 1 5 1 4 2 2 4 1 2 2 2 1 1 2 1 2 5 1 1 4 2 2 4 4 1 1 2 1 2 4 2 3 1 2 1 1 1 1 2 2 1 2 4 1 1 4 4 1 1 4 5 2 1 1 1 2 2 4 2 2 2 1 1 1 2 2 4 1 1 2 1 2 2 1 2 2 4 2 2 3 2 1 4 1 1 3 1 1 5 1 5 1 4 2 1 2 2 2 1 2 1 2 3 2 1 4 2 1 1 5 1 4 3 2 1 1 1 4 1 1 4 1 1 4 4 2 1 2 1 2 1 1 1 2 2 1 1 2 1 2 2 1 4 2 2 2 1 2 2 2 2 1 2 2 4 1 1 2 2 5 2 3 1 1 1 1 5 2 2 4 2 4 2 3 1 1 2 1 1 4 2 1 2 2 2 2 1 1 1 2 1 1 1 1 2 3 1 2 2 4 1 4 2 5 2 3 1 1 4 2 4 4 2 1 1 1 2 2 1 5 1 4 1 2 2 1 4 3 1 1 3 1 2 3 1 2 2 2 2 2 5 1 2 1 4 1 2 4 2 1 2 2 4 2 1 1 2 1 2 5 2 2 2 1 5 1 1 1 4 2 1 5 2 2 1 1 1 1 1 1 4 2 1 5 2 5 2 1 2 4 2 2 1 1 2 4 1 4 1 2 2 2 4 2 1 2 4 1 1 4 1 2 1 2 1 4 2 1 2 5 5 4 1 2 2 2 2 3 2 2 2 2 5 2 5 2 1 2 1 4 1 2 1 2 4 1 1 2 2 1 1 1 1 1 2 1 1 2 5 2 1 1 4 2 1 1 4 1 1 1 2 2 1 2 2 3 1 1 2 2 2 1 2 2 1 1 2 2 2 3 1 1 2 4 4 1 1 2 2 2 3 2 1 4 4 1 4 4 2 1 2 1 5 1 4 2 2 2 2 2 2 4 2 2 4 5 2 1 1 2 2 1 2 2 5 4 1 2 3 5 2 2 2 1 1 2 2 2 1 1 1 2 2 2 5 4 2 4 4 1 4 5 1 2 1 1 4 3 4 4 1 1 1 1 4 2 3 1 4 1 1 1 4 1 1 2 2 1 1 1 5 1 1 2 1 4 2 4 4 1 5 1 2 2 2 1 1 2 3 1 2 2 5 1 2 1 2 4 2 2 1 2 4 4 2 2 2 2 1 4 2 1 4 2 1 1 2 1 2 2 5 2 1 5 4 2 2 2 4 2 2 5 1 1 5 1 1 2 4 2 5 1 4 1 2 1 3 2 2 1 2 2 1 2 4 4 1 2 1 5 1 1 1 1 1 2 2 2 1 5 5 1 1 2 4 1 2 2 1 3 1 4 2 1 1 4 1 2 2 2 2 2 5 2 2 2 2 2 2 1 1 1 2 1 1 2 2 1 1 2 1 1 1 1 1 1 3 1 2 2 1 4 2 1 4 3 2 2 2 1 3 4 2 4 2 2 2 4 1 2 1 2 2 1 5 1 2 4 2 2 1 1 4 1 1 1 1 1 1 1 2 4 1 1 1 2 4 2 2 3 2 2 1 1 3 1 4 2 2 2 1 2 4 2 2 2 2 1 3 5 1 4 3 1 3 1 1 1 2 3 1 5 5 5 2 1 2 1 1 1 2 2 1 1 5 2 4 2 3 4 2 4 1 5 1 4 2 2 1 1 1 2 2 2 1 4 3 1 1 1 1 5 2 1 2 3 4 2 1 2 2 4 1 5 1 4 2 2 5 4 2 1 1 4 3 4 5 1 1 2 1 1 2 1 1 2 1 2 2 2 5 2 2 2 1 4 1 2 1 2 2 1 4 4 5 3 1 4 2 2 2 5 2 2 2 2 2 1 1 1 4 2 1 1 1 1 1 2 1 2 2 2 1 1 2 1 2 2 2 1 1 4 2 4 2 4 4 2 4 2 2 4 2 2 2 1 4 2 2 1 4 2 3 2 3 2 2 2 1 2 1 1 2 5 1 1 5 2 2 4 1 3 2 1 1 1 4 2 2 1 4 2 1 4 1 1 2 2 2 1 3 2 2 2 1 1 1 2 2 1 3 1 2 1 2 2 1 4 2 2 2 2 1 2 2 4 2 1 5 3 5 2 1 2 1 5 2 2 1 4 2 4 2 2 4 2 1 1 4 2 1 1 2 4 2 4 1 2 2 2 1 1 1 2 2 1 1 3 1 1 4 2 2 1 1 2 2 2 1 1 3 1 1 1 4 1 2 5 1 1 1 2 1 1 4 1 2 2 1 2 2 4 1 1 5 2 2 5 2 4 4 1 2 1 1 1 1 1 2 3 2 3 1 1 2 4 2 2 4 3 2 3 2 1 1 1 1 1 2 5 2 4 3 2 1 2 2 1 1 3 1 1 2 1 2 1 4 1 4 1 2 4 2 4 1 1 2 2 1 1 2 2 1 4 1 2 2 1 2 2 2 1 1 2 1 2 2 2 1 1 2 4 4 2 4 1 2 5 1 1 1 1 3 3 1 2 2 2 2 2 2 1 2 1 1 1 1 3 1 1 2 4 1 3 2 1 2 4 1 2 2 4 4 4 1 2 2 2 1 2 2 2 1 2 1 1 4 4 2 1 2 1 1 1 2 2 4 2 3 4 1 2 2 2 1 1 2 2 1 5 1 1 2 1 2 1 1 2 1 4 2 2 4 5 1 1 2 5 1 2 1 1 1 1 1 2 2 2 1 1 1 4 2 1 4 3 1 3 5 1 2 2 2 4 1 2 1 1 1 1 2 1 2 2 1 2 2 1 2 2 1 2 5 1 1 1 1 1 2 1 1 1 1 1 2 1 2 2 2 1 1 2 2 4 1 2 4 2 4 2 2 2 2 1 5 1 1 2 5 2 4 3 1 1 1 2 1 1 2 2 2 4 2 4 2 1 1 1 2 2 2 1 2 4 1 4 5 1 2 1 1 2 1 5 2 4 1 1 2 1 1 2 1 2 2 1 1 4 1 2 4 2 2 2 4 5 4 2 1 1 1 4 3 2 4 1 1 1 2 2 2 1 2 1 2 2 2 1 3 2 3 1 2 2 2 1 2 1 1 5 4 1 2 4 3 3 4 2 1 1 1 1 2 4 1 5 3 2 2 1 3 2 2 2 1 1 4 1 1 2 1 4 1 1 1 2 1 2 2 3 2 2 2 2 2 2 1 2 2 1 1 2 4 4 4 2 4 2 2 4 4 4 2 4 4 1 2 4 2 2 2 1 1 2 1 4 2 2 1 2 1 2 2 2 2 1 1 5 1 4 3 4 1 2 1 4 2 2 1 1 2 1 1 3 1 1 5 4 1 1 1 1 1 2 4 2 2 1 2 1 3 2 4 2 3 1 2 2 2 5 2 1 2 1 4 1 4 1 1 2 2 1 4 1 2 1 1 3 2 2 1 1 4 2 2 1 2 2 2 2 2 1 1 5 1 1 2 1 1 2 2 1 1 5 2 2 1 2 4 2 1 4 2 1 2 4 2 1 3 1 2 2 1 1 2 2 2 1 3 1 1 2 2 1 2 1 1 1 2 2 1 3 1 1 3 2 1 2 2 2 5 2 1 2 2 1 1 4 5 1 2 3 2 4 1 3 1 2 4 4 2 2 3 2 2 4 4 4 1 2 2 4 2 2 1 2 4 4 1 2 2 1 1 5 2 2 1 1 1 1 2 4 2 5 1 4 1 2 1 2 5 1 2 2 2 1 1 1 2 1 5 2 2 2 1 1 1 1 1 1 2 1 2 2 1 2 1 1 2 1 2 1 4 5 1 1 1 3 2 1 1 3 1 2 2 2 4 1 2 1 1 1 1 2 2 1 3 1 1 2 2 4 1 1 1 1 4 1 1 2 2 1 1 1 1 1 2 2 2 2 2 5 1 2 1 1 1 2 1 2 1 2 4 1 2 2 2 1 2 2 1 2 1 2 5 5 3 1 1 1 1 1 2 2 2 1 2 4 2 2 2 5 1 2 5 3 1 1 4 3 2 4 2 2 1 2 2 2 1 4 2 2 1 1 1 2 2 2 2 2 5 1 1 1 2 1 1 1 2 5 3 2 1 2 2 1 2 2 1 3 3 3 1 1 2 1 5 1 2 2 2 4 1 2 4 4 2 1 1 2 2 1 1 1 3 2 2 4 2 5 1 2 1 2 2 5 2 2 5 2 4 1 1 2 1 1 1 2 1 1 1 1 2 1 1 2 1 1 2 2 2 2 1 1 2 2 2 2 1 2 1 5 4 2 2 4 2 2 4 2 5 2 2 1 2 2 4 3 1 4 1 1 4 4 1 1 1 1 2 2 2 5 4 3 1 1 4 1 4 5 2 1 5 1 1 4 2 2 1 2 2 5 4 1 1 2 2 2 2 1 2 1 1 1 4 1 2 1 1 2 1 1 1 2 4 1 3 2 3 4 3 1 4 2 1 1 2 2 1 2 3 2 5 1 1 4 1 1 2 4 4 2 2 1 2 4 4 1 2 1 1 1 1 1 4 1 4 1 2 2 2 2 1 1 2 1 1 2 1 1 5 1 2 5 2 4 5 4 1 2 5 2 3 1 1 2 5 1 1 5 5 4 1 2 4 2 2 1 1 4 1 1 1 1 2 4 2 2 4 4 5 4 1 2 4 1 1 1 4 2 4 2 2 1 2 3 2 4 1 2 1 4 1 2 1 2 2 1 1 1 1 1 2 1 2 1 2 3 2 1 4 4 2 4 2 3 2 1 1 4 2 2 2 1 2 1 1 5 1 5 1 2 1 1 2 1 1 2 4 1 1 2 4 1 1 5 4 1 2 4 3 2 1 3 4 2 1 1 1 1 2 4 1 1 2 2 1 1 1 1 4 2 4 3 1 1 2 2 1 2 2 1 1 2 1 1 4 2 1 2 1 4 2 4 3 2 2 2 2 2 1 1 2 1 2 3 2 2 2 2 1 2 2 1 5 4 2 4 2 4 1 2 1 4 2 1 2 2 4 2 4 1 1 2 2 1 2 1 1 2 2 1 2 2 1 2 1 2 2 1 1 2 1 2 1 2 1 2 1 1 5 2 4 2 3 1 1 4 1 2 2 2 2 1 3 4 2 1 1 1 1 4 1 2 1 3 1 2 4 2 1 4 2 2 1 4 2 2 2 3 1 1 1 1 1 1 5 1 2 2 1 4 2 2 2 2 2 4 3 1 1 2 4 2 1 5 4 2 4 1 2 1 1 2 2 1 1 1 2 5 2 2 2 1 1 1 1 4 2 2 4 2 2 1 5 2 1 2 5 2 2 1 4 1 2 4 5 4 1 1 2 2 2 4 1 5 1 5 1 2 3 1 2 2 1 2 2 2 2 4 2 1 5 2 2 2 2 2 1 2 1 1 2 1 2 2 1 3 2 2 1 5 1 1 1 2 2 2 4 3 2 4 4 1 2 2 3 1 1 1 2 2 2 2 2 1 1 2 2 1 1 2 2 2 1 2 1 3 4 4 1 1 1 2 1 4 2 1 1 2 4 2 4 2 2 4 4 5 4 2 1 2 2 2 2 1 1 2 5 2 1 4 1 2 4 2 2 5 2 4 2 2 1 1 5 4 1 1 2 1 1 1 1 1 2 5 5 1 4 1 4 4 1 1 1 2 3 1 4 1 1 1 1 2 2 1 1 2 4 1 2 1 1 1 2 2 2 2 2 2 2 2 1 1 2 1 2 2 2 1 4 5 2 2 2 2 2 2 1 2 3 5 1 4 1 2 1 1 2 1 2 1 1 1 4 4 1 2 2 4 5 2 1 2 2 2 2 1 1 4 2 1 2 4 1 2 2 2 1 2 1 1 4 1 2 1 1 5 4 2 1 2 2 2 1 2 5 1 3 1 3 1 1 2 1 1 4 2 5 2 2 4 3 1 4 1 2 1 1 2 1 1 2 2 3 2 4 1 1 1 1 1 2 1 1 1 1 2 2 1 1 5 1 4 2 1 4 1 2 2 2 4 2 5 2 1 3 1 2 4 1 1 3 1 1 1 1 1 1 1 1 1 2 1 4 4 1 1 4 2 2 5 1 1 2 2 2 2 1 1 1 4 2 1 2 1 2 4 2 2 2 5 2 1 1 2 5 1 1 1 1 1 2 1 2 2 1 2 4 2 2 4 1 1 4 2 2 1 1 4 4 1 1 4 1 2 4 1 2 1 2 2 2 1 1 1 3 1 2 2 4 2 1 4 1 1 4 3 2 2 1 1 2 5 2 4 4 2 2 3 1 5 2 2 1 1 1 1 1 2 2 4 1 2 5 2 1 1 2 2 2 2 4 5 1 1 2 1 1 3 2 2 2 2 1 5 1 2 5 2 2 1 2 2 3 5 4 4 5 2 1 1 1 5 1 2 1 4 3 2 2 1 1 2 1 1 2 1 2 1 2 2 2 1 2 1 1 3 1 2 2 4 3 1 2 2 4 3 3 4 2 1 5 1 5 4 1 4 2 1 1 2 1 1 1 2 1 2 1 4 4 2 2 1 3 1 1 1 1 5 1 1 1 1 4 2 5 5 2 2 3 1 2 1 1 2 3 1 2 2 4 2 2 4 1 1 1 2 4 4 1 2 4 2 2 1 1 1 2 1 1 2 2 2 2 2 4 1 1 3 1 1 2 1 2 1 1 2 2 1 1 2 5 2 1 1 4 2 2 1 2 4 1 1 4 1 1 5 1 4 1 1 1 1 1 2 1 1 3 1 1 2 5 4 2 5 2 1 2 1 2 4 4 2 2 2 2 2 2 1 1 3 2 4 2 1 4 2 1 1 1 1 2 1 2 2 1 1 2 2 3 2 2 1 2 1 1 2 4 2 2 1 5 1 1 3 2 1 5 1 1 4 2 1 2 2 1 1 2 2 2 1 2 2 1 1 2 1 2 4 4 1 1 2 1 2 1 4 1 2 2 1 1 2 2 1 1 1 2 2 2 1 2 2 2 1 1 2 2 1 5 1 1 2 2 2 4 2 4 1 4 1 2 1 1 2 2 2 2 2 4 1 1 1 2 2 2 1 1 1 2 2 4 1 2 4 1 1 1 4 1 2 2 1 1 4 1 5 4 4 1 2 3 1 4 1 4 4 5 2 1 5 1 2 2 2 1 2 5 2 1 1 2 5 1 4 1 4 1 1 4 1 2 5 1 1 3 1 1 1 1 1 1 2 1 1 3 1 2 2 1 1 2 5 1 2 2 2 2 1 1 4 1 1 1 2 2 4 4 2 4 1 2 2 1 1 4 1 1 1 1 5 1 2 1 2 5 3 1 1 5 2 2 2 2 1 4 4 1 2 4 2 1 1 1 5 4 2 1 1 2 2 2 4 5 1 2 1 4 4 1 2 1 2 1 1 1 4 2 1 2 1 2 1 3 1 1 1 2 2 2 2 4 1 1 2 4 1 2 1 4 1 2 1 4 2 1 4 1 1 1 2 1 2 1 2 2 1 4 2 3 5 2 1 1 1 2 2 2 4 4 4 1 1 2 1 1 2 1 1 2 1 1 1 1 2 1 1 4 2 4 2 2 1 2 1 1 1 2 1 4 1 2 2 4 1 1 3 4 1 2 5 2 1 2 1 2 1 2 1 5 4 2 2 1 4 2 1 2 2 1 4 1 2 5 2 2 1 2 3 2 2 2 1 2 2 5 1 1 1 1 3 4 4 2 1 2 2 1 1 1 2 1 2 1 1 3 1 1 1 2 2 2 2 2 1 5 5 2 1 1 1 2 2 1 1 2 2 2 3 1 5 4 1 1 2 1 2 2 2 2 2 2 5 2 2 1 2 1 3 2 2 1 2 4 1 2 2 1 4 5 1 1 4 1 2 2 2 5 1 2 3 1 5 1 4 1 1 2 2 1 2 1 2 2 1 2 2 1 4 1 2 3 1 1 1 2 4 4 4 1 1 4 2 1 2 2 2 4 2 2 2 2 1 1 1 2 1 4 1 1 2 1 2 1 3 2 1 1 1 1 1 4 1 2 2 2 2 2 2 2 1 1 4 1 1 3 2 2 2 1 1 1 1 1 2 1 1 2 2 2 1 2 2 1 2 2 5 4 2 2 2 2 1 1 2 4 4 4 3 2 5 1 2 1 1 2 2 2 4 2 4 2 2 4 1 1 1 1 1 1 2 1 2 3 1 1 2 3 1 4 1 2 4 1 2 3 2 4 2 2 4 1 1 4 2 4 2 1 2 4 1 5 1 1 3 1 1 2 4 2 1 2 1 2 2 1 1 1 1 2 2 1 3 2 1 2 2 2 2 4 4 1 2 4 3 2 3 4 2 1 1 3 1 2 5 2 1 1 1 1 4 5 5 1 2 2 1 1 1 4 1 1 1 2 1 2 1 2 4 1 3 2 2 2 1 3 1 4 3 2 2 2 2 1 4 1 2 5 2 4 1 1 1 4 2 3 2 2 1 5 1 1 1 2 1 1 2 3 1 3 1 1 1 1 1 1 2 1 2 1 1 2 2 3 2 2 1 2 2 1 2 2 2 2 1 1 5 1 2 1 2 2 4 1 4 1 2 2 2 3 2 2 1 2 1 1 4 3 1 4 1 2 2 4 5 4 2 2 1 2 2 4 2 1 4 1 2 1 1 2 1 1 4 4 2 5 1 5 1 2 2 1 2 5 1 2 5 2 1 1 2 4 2 2 1 1 2 1 4 1 3 1 2 1 1 4 2 2 5 1 1 1 3 2 1 2 2 3 1 2 2 2 1 1 4 2 1 1 2 4 1 2 4 4 5 2 5 4 1 1 1 1 1 4 1 1 1 5 5 5 2 1 2 1 2 2 2 1 1 4 3 3 1 1 4 2 3 1 1 2 2 1 1 2 2 2 2 2 1 3 3 2 2 2 2 2 3 1 1 1 2 1 1 3 4 3 1 1 4 4 1 4 1 4 2 1 2 1 1 1 1 4 1 2 4 2 2 5 2 2 2 2 2 1 2 4 2 1 2 2 2 1 1 2 2 5 2 3 2 2 2 1 2 4 2 4 4 1 2 1 2 2 2 1 1 2 2 2 1 4 2 1 2 2 1 1 1 1 1 1 5 1 3 3 2 2 1 1 1 5 1 2 2 4 4 2 2 2 1 2 2 1 4 2 2 1 1 1 5 1 2 2 2 4 1 2 2 2 2 1 1 4 2 2 1 1 2 1 1 2 2 1 4 2 1 1 2 2 2 1 4 1 5 3 1 2 2 2 1 1 1 1 1 1 2 2 1 5 2 4 3 1 4 2 1 4 1 2 2 1 1 1 2 2 2 1 1 1 4 1 1 4 2 1 4 4 2 1 4 2 1 3 3 1 2 1 3 2 2 5 2 2 2 1 2 2 2 1 2 1 1 2 1 2 1 2 1 4 3 1 1 2 4 1 2 1 1 2 2 2 2 4 1 1 2 2 4 1 5 2 1 1 1 1 2 1 1 2 1 1 2 5 2 4 2 1 1 4 2 1 5 5 1 2 2 4 1 2 3 2 2 1 1 1 1 2 1 4 2 2 4 1 1 2 2 4 1 1 2 3 1 1 5 1 2 2 2 1 1 1 5 1 1 1 2 2 2 1 1 4 4 2 2 2 3 1 2 1 4 1 1 4 1 2 2 5 2 4 1 4 4 2 4 2 1 2 2 2 4 2 4 4 4 2 4 1 2 1 3 1 2 1 2 5 1 1 1 1 1 1 2 2 2 1 4 1 4 1 4 3 1 4 4 4 1 1 1 4 2 2 2 2 2 2 2 1 1 4 3 2 2 1 3 1 3 1 2 2 5 3 1 1 1 2 4 2 2 1 1 2 2 2 1 2 1 3 2 2 2 2 2 4 2 2 2 1 4 2 4 1 3 1 2 4 2 1 2 1 2 2 2 1 1 2 4 2 5 4 2 2 2 2 2 2 4 2 1 1 2 2 2 1 4 2 2 1 2 2 2 4 1 2 1 2 1 2 2 2 2 1 1 2 1 1 4 1 2 2 1 2 5 1 2 1 1 4 4 1 1 1 4 5 2 2 1 2 1 1 2 1 1 2 2 3 2 1 5 1 1 1 1 2 4 2 1 2 1 2 2 1 1 1 4 2 2 2 1 4 3 4 2 2 2 2 2 1 4 3 5 3 1 2 4 1 2 1 2 2 4 4 4 1 2 4 4 2 1 1 4 2 1 4 2 1 2 2 2 2 2 1 2 2 2 2 1 1 2 2 1 1 4 2 3 1 3 1 1 2 5 1 2 2 3 5 4 2 4 2 2 2 3 1 4 4 1 2 1 1 2 4 2 2 3 1 1 2 2 2 2 3 4 2 1 3 2 2 1 2 2 2 2 1 2 1 2 2 2 1 4 1 4 1 1 2 1 2 1 1 2 1 4 2 1 1 2 1 1 1 2 2 1 1 1 2 2 1 2 2 2 1 3 4 1 5 4 1 2 1 4 1 1 4 1 4 3 4 2 3 4 1 2 2 1 2 1 1 4 2 5 1 2 1 1 2 5 2 1 1 1 4 2 2 2 1 2 1 2 1 2 4 1 2 2 4 2 1 1 2 2 4 1 2 2 1 1 3 2 2 2 2 1 2 2 1 2 4 2 2 5 2 1 4 3 3 3 2 2 4 2 2 1 2 1 5 2 1 2 1 2 2 1 1 2 1 2 4 2 2 1 2 1 2 2 1 1 1 2 2 2 1 1 2 4 3 1 1 3 2 1 2 2 3 1 2 1 1 1 2 1 1 4 1 2 1 1 1 1 3 4 1 2 4 2 5 5 1 1 2 5 4 1 1 1 1 2 2 4 1 2 2 1 2 5 4 4 2 1 3 2 5 4 2 2 2 1 1 1 2 1 2 2 2 1 4 4 4 1 3 1 3 4 1 1 2 1 1 2 4 3 2 2 2 2 1 1 1 2 5 2 4 3 1 1 1 2 2 4 1 4 2 4 1 2 4 2 1 2 2 2 2 1 2 4 2 1 1 4 4 2 1 4 2 2 2 2 2 1 1 2 4 1 2 1 1 2 1 1 2 2 2 2 4 4 1 1 1 1 2 1 2 4 1 2 4 4 2 2 1 1 5 4 4 1 1 4 2 1 4 3 2 1 2 2 2 5 2 2 4 1 2 1 5 4 1 2 4 1 1 1 2 4 2 1 1 2 1 2 1 1 2 2 1 4 4 2 4 1 4 2 2 3 2 1 1 2 1 2 1 4 2 4 4 2 3 1 2 4 2 1 2 1 1 2 2 1 1 2 1 1 4 1 2 2 3 2 4 1 2 1 2 1 5 2 1 2 2 2 4 2 2 5 1 2 1 2 2 2 1 1 4 1 2 1 4 1 1 2 2 2 4 1 1 5 2 4 1 2 2 1 1 2 5 2 2 1 1 2 3 2 1 1 4 1 2 5 1 1 1 2 2 2 2 2 4 4 2 1 2 1 1 2 1 2 1 1 1 3 1 2 2 1 1 1 2 1 1 2 1 3 1 2 1 2 4 1 2 1 1 2 1 1 4 1 1 4 2 4 1 1 2 1 2 1 3 3 2 4 2 4 1 1 1 1 2 1 1 1 1 5 1 4 1 4 1 2 2 1 1 2 1 1 4 1 1 1 2 4 2 2 2 4 2 4 1 2 1 2 1 5 1 1 3 1 2 2 4 2 1 4 4 4 1 2 1 1 2 1 1 1 2 2 1 1 2 1 1 1 4 1 1 1 1 1 4 1 2 1 2 2 1 1 1 2 1 2 2 1 2 2 4 1 2 4 1 1 1 1 1 1 2 2 1 1 1 3 2 1 5 2 4 3 1 1 1 2 2 1 2 2 1 4 2 2 2 2 1 4 2 2 4 1 1 1 2 1 3 2 1 4 2 4 2 2 1 2 1 1 1 4 1 1 1 2 1 1 2 1 5 4 2 2 1 4 2 1 2 5 2 1 2 2 4 2 1 1 2 2 3 1 5 2 2 2 2 1 4 4 1 5 4 4 1 1 1 1 1 2 4 4 2 2 2 1 1 1 2 4 2 1 2 2 2 2 5 1 2 2 1 4 4 2 1 1 1 2 2 2 2 2 4 5 4 2 5 2 2 2 1 2 2 1 1 1 1 1 2 2 2 4 2 1 2 2 1 2 1 2 4 5 1 1 2 2 1 2 2 1 4 1 2 5 4 2 4 1 4 1 2 1 2 1 1 1 4 2 1 3 5 1 2 1 3 2 1 1 1 4 1 1 2 2 1 1 1 1 4 3 1 2 2 1 1 2 2 2 4 2 4 1 4 1 1 2 2 2 2 2 1 2 2 1 1 1 1 2 5 2 2 2 3 3 2 2 1 5 2 3 2 1 2 1 4 3 2 5 1 4 1 2 2 2 2 2 1 2 1 5 2 1 1 1 1 2 2 1 5 1 2 1 1 2 1 1 2 2 4 4 1 3 2 2 1 1 1 3 1 4 3 4 2 1 1 4 2 2 1 2 4 1 2 1 1 2 1 1 4 2 2 2 2 3 1 4 1 2 2 2 1 2 1 2 3 5 5 4 3 1 2 4 2 2 1 2 2 1 2 1 2 2 2 1 1 1 1 1 1 2 2 4 1 1 1 2 2 1 1 2 1 2 2 1 2 1 2 2 1 1 2 1 2 2 4 2 2 2 1 2 1 2 1 1 2 2 2 2 1 2 2 1 1 1 1 2 2 1 4 2 1 1 1 1 4 2 2 2 4 2 3 2 1 2 2 4 2 2 3 2 2 4 1 2 2 1 1 1 1 2 2 4 4 1 4 1 2 2 2 4 1 1 2 2 1 2 1 2 2 2 1 2 1 1 1 5 3 2 2 4 1 4 1 5 2 2 1 2 4 3 5 1 5 1 2 1 4 2 2 1 1 2 5 3 2 5 1 2 2 2 1 2 1 1 4 1 2 1 2 1 2 1 1 2 1 5 2 1 1 3 1 4 4 2 2 1 1 5 2 1 1 3 1 1 4 2 2 1 1 2 3 2 2 1 4 4 1 2 2 2 5 1 1 2 2 3 1 1 2 2 2 1 1 2 1 4 1 2 2 2 2 2 1 4 1 3 1 3 2 1 4 2 1 1 5 1 1 1 2 4 2 2 1 1 2 2 2 2 1 4 1 1 4 3 5 4 4 5 1 4 2 1 1 1 2 1 4 1 3 1 2 1 1 1 1 2 2 2 1 1 2 2 2 2 2 4 1 2 3 1 2 1 2 1 4 1 1 2 2 2 1 2 1 1 1 1 2 4 1 3 2 4 1 2 1 2 1 1 2 2 3 2 2 1 4 1 4 2 3 5 2 2 4 2 2 2 1 4 1 4 1 1 1 2 4 2 5 2 1 2 1 1 2 4 2 2 1 4 1 2 3 2 1 3 1 1 1 2 2 1 1 1 2 1 1 2 2 1 1 4 1 1 1 1 2 5 2 1 2 1 1 5 2 2 1 1 2 1 5 4 2 2 3 2 1 1 2 2 1 1 2 2 5 1 2 2 1 2 2 2 2 1 2 4 2 2 2 2 2 2 5 2 1 3 2 2 2 2 2 1 2 1 1 2 1 2 2 1 2 2 1 1 2 1 1 1 2 2 1 5 1 4 1 1 2 1 1 2 2 4 2 4 2 1 4 3 2 1 2 5 3 1 2 2 1 2 1 1 4 3 1 1 2 5 2 1 4 1 1 1 1 4 1 2 5 1 1 1 2 3 1 1 1 4 1 1 2 2 4 2 2 3 2 1 1 1 1 1 1 4 5 4 2 2 3 2 1 2 2 3 1 1 2 1 2 1 3 1 2 1 1 1 5 1 4 2 4 1 1 4 5 2 5 2 3 2 4 1 1 1 5 3 4 4 2 1 2 2 1 1 5 1 4 1 1 2 2 5 2 1 2 4 2 1 3 1 2 2 1 2 1 3 4 4 2 1 4 2 2 1 2 4 1 2 2 1 4 5 2 2 1 1 4 1 2 1 2 2 2 2 2 5 2 1 3 4 5 2 2 2 2 1 2 4 2 1 1 1 5 4 4 5 2 1 5 1 2 1 3 2 2 2 2 1 2 1 2 2 2 2 1 2 4 4 3 1 5 2 5 2 2 1 1 2 2 4 3 4 2 1 1 5 2 2 1"},
    };

    public MigratoryBirds() {
        super(inputs);
    }

    @Override
    public Object run(List<String[]> input) {

        final List<Integer> arr = Arrays
                .stream(input.get(1))
                .map(Integer::valueOf)
                .collect(Collectors.toList());

        return migratoryBirds(arr);
    }

    // Complete the migratoryBirds function below.
    private static int migratoryBirds(List<Integer> arr) {

        int maxCount = 0;
        int maxType = 0;

        final Map<Integer, Integer> map = new HashMap<>();
        for(final int type : arr) {
            if(!map.containsKey(type)) {
                map.put(type, 0);
            }
            final int old = map.get(type);
            final int count = old + 1;
            map.put(type, count);

            if (type == maxType) {
                maxCount = count;
                continue;
            }

            if (count > maxCount) {
                maxCount = count;
                maxType = type;
            } else if (count == maxCount) {
                if  (type < maxType) {
                    maxType = type;
                }
            }
        }

        return maxType;
    }
}
